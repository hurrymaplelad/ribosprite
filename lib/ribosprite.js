// Generated by CoffeeScript 1.7.1
var button, div, form, input, label, prefixed, renderable, ribosprite, span, _ref;

_ref = require('teacup'), renderable = _ref.renderable, button = _ref.button, form = _ref.form, div = _ref.div, input = _ref.input, label = _ref.label, span = _ref.span;

prefixed = function(prefix, action) {
  return ['rv', prefix, action].filter(Boolean).join('-');
};

ribosprite = module.exports;

ribosprite.helpText = renderable(function(field) {
  var attrs;
  attrs = {};
  attrs[prefixed(field.prefix, 'text')] = "fieldErrors." + field.name;
  return span('.help-block', attrs);
});

ribosprite.formHelpText = renderable(function(form) {
  return div('.has-error', function() {
    var attrs;
    attrs = {};
    attrs[prefixed(form.prefix, 'text')] = "formError";
    return span('.help-block', attrs);
  });
});

ribosprite.input = function(type) {
  return renderable(function(field) {
    var attrs, id, labelText, name, prefix;
    name = field.name, id = field.id, labelText = field.label, prefix = field.prefix;
    attrs = {};
    attrs[prefixed(prefix, 'class-has-error')] = "fieldErrors." + name;
    return div('.form-group', attrs, function() {
      label('.control-label', {
        "for": id
      }, labelText);
      attrs = {
        id: id,
        type: type
      };
      attrs[prefixed(prefix, 'value')] = "data." + name;
      input('.form-control', attrs);
      return ribosprite.helpText(field);
    });
  });
};

ribosprite.text = ribosprite.input('text');

ribosprite.form = renderable(function(_arg, body) {
  var attrs, prefix;
  prefix = (_arg != null ? _arg : {}).prefix;
  attrs = {};
  attrs[prefixed(prefix, 'on-submit')] = 'submit';
  return form(attrs, body);
});

ribosprite.submit = renderable(function(buttonText) {
  if (buttonText == null) {
    buttonText = 'Submit';
  }
  return button('.btn.btn-default', {
    type: 'submit'
  }, buttonText);
});
